identical <- identical(team1, character(0))
# Checking if player_name is in team specified by teamID
if (identical == FALSE) {
team_df1 <- team_df %>%
filter(Name == team1)
print(team_df1)
} else if (identical == TRUE){
stop("Your player is not in this team. Please input the correct player name / team ID.")
}
} else if (is_na == TRUE) {
print(team_df)
}
print()
}
myplayer(19)
myplayer(19)
myplayer(19, "Saka")
myplayer <- function(teamID, player_name = NA){
base_url <- "http://api.isportsapi.com/sport/football/"
call_url_player <- str_c(base_url, "player?", "teamId=", teamID, "&api_key=", Sys.getenv("ISPORT_KEY"))
# Checking if the leagueID is entered as a numeric
if (is.numeric(teamID) == FALSE) {
stop("Please check your teamID, it must be of the form: Numeric")
}
#Obtain DF for squad info of team
team_call <- GET(call_url_player)
if (team_call$status_code != 200) {
stop ("Error when calling API. Please check your function arguments.")
}
team_df <- as.data.frame(fromJSON(toJSON(content(team_call)))) %>%
unnest(cols = c(data.recordId, data.playerId, data.name, data.birthday, data.height,
data.country, data.feet, data.weight, data.photo, data.value,
data.teamId, data.position, data.number, data.introduce,
data.contractEndDate)) %>%
select(TeamID = data.teamId, PlayerID = data.playerId, Name = data.name, Birthday = data.birthday,
Height = data.height, Country = data.country, Dominant_Foot = data.feet,
Weight = data.weight, Value = data.value,
Player_Position = data.position, Jersey_Number = data.number,
Contract_Expiry = data.contractEndDate, Photo = data.photo)
#Retrieving info about a particular player
is_na <- is.na(player_name)
if (is_na == FALSE) {
team1 <- str_subset(team_df$Name, player_name)
identical <- identical(team1, character(0))
# Checking if player_name is in team specified by teamID
if (identical == FALSE) {
team_df1 <- team_df %>%
filter(Name == team1)
print(team_df1)
} else if (identical == TRUE){
stop("Your player is not in this team. Please input the correct player name / team ID.")
}
} else if (is_na == TRUE) {
print(team_df)
}
}
myplayer(19, "Saka")
myplayer(19, "Ozil")
install.packages("imager")
library(imager)
library(imager)
library(magick)
library(magick)
image_read("http://zq.win007.com/Image/player/images/201866111444.png?win007=sell")
ozil <- image_read("http://zq.win007.com/Image/player/images/201866111444.png?win007=sell")
ozil
print(ozil)
myplayer <- function(teamID, player_name = NA){
base_url <- "http://api.isportsapi.com/sport/football/"
call_url_player <- str_c(base_url, "player?", "teamId=", teamID, "&api_key=", Sys.getenv("ISPORT_KEY"))
# Checking if the leagueID is entered as a numeric
if (is.numeric(teamID) == FALSE) {
stop("Please check your teamID, it must be of the form: Numeric")
}
#Obtain DF for squad info of team
team_call <- GET(call_url_player)
if (team_call$status_code != 200) {
stop ("Error when calling API. Please check your function arguments.")
}
team_df <- as.data.frame(fromJSON(toJSON(content(team_call)))) %>%
unnest(cols = c(data.recordId, data.playerId, data.name, data.birthday, data.height,
data.country, data.feet, data.weight, data.photo, data.value,
data.teamId, data.position, data.number, data.introduce,
data.contractEndDate)) %>%
select(TeamID = data.teamId, PlayerID = data.playerId, Name = data.name, Birthday = data.birthday,
Height = data.height, Country = data.country, Dominant_Foot = data.feet,
Weight = data.weight, Value = data.value,
Player_Position = data.position, Jersey_Number = data.number,
Contract_Expiry = data.contractEndDate, Photo = data.photo)
#Retrieving info about a particular player
is_na <- is.na(player_name)
if (is_na == FALSE) {
team1 <- str_subset(team_df$Name, player_name)
identical <- identical(team1, character(0))
# Checking if player_name is in team specified by teamID
if (identical == FALSE) {
team_df1 <- team_df %>%
filter(Name == team1)
print(team_df1)
print(image_read(team_df1$Photo))
} else if (identical == TRUE){
stop("Your player is not in this team. Please input the correct player name / team ID.")
}
} else if (is_na == TRUE) {
print(team_df)
}
}
myplayer(19, "Ozil")
myplayer(19, "Ozil")
myplayer(19, "Saka")
myplayer(19, "Aubameyang")
myplayer(19, "Emery")
myplayer(19, "Freddie")
myplayer(19, "Llungberg")
myplayer(19, "Laca")
?str_detect
return(ozil)
myplayer <- function(teamID, player_name = NA){
base_url <- "http://api.isportsapi.com/sport/football/"
call_url_player <- str_c(base_url, "player?", "teamId=", teamID, "&api_key=", Sys.getenv("ISPORT_KEY"))
# Checking if the leagueID is entered as a numeric
if (is.numeric(teamID) == FALSE) {
stop("Please check your teamID, it must be of the form: Numeric")
}
#Obtain DF for squad info of team
team_call <- GET(call_url_player)
if (team_call$status_code != 200) {
stop ("Error when calling API. Please check your function arguments.")
}
team_df <- as.data.frame(fromJSON(toJSON(content(team_call)))) %>%
unnest(cols = c(data.recordId, data.playerId, data.name, data.birthday, data.height,
data.country, data.feet, data.weight, data.photo, data.value,
data.teamId, data.position, data.number, data.introduce,
data.contractEndDate)) %>%
select(TeamID = data.teamId, PlayerID = data.playerId, Name = data.name, Birthday = data.birthday,
Height = data.height, Country = data.country, Dominant_Foot = data.feet,
Weight = data.weight, Value = data.value,
Player_Position = data.position, Jersey_Number = data.number,
Contract_Expiry = data.contractEndDate, Photo = data.photo)
#Retrieving info about a particular player
is_na <- is.na(player_name)
if (is_na == FALSE) {
team1 <- str_subset(team_df$Name, player_name)
identical <- identical(team1, character(0))
# Checking if player_name is in team specified by teamID
if (identical == FALSE) {
team_df1 <- team_df %>%
filter(Name == team1)
print(team_df1)
photo_url_check <- stringr::str_detect(team_df1$Photo, "^http")
if (photo_url_check == TRUE) {
print(magick::image_read(team_df1$Photo))
}
} else if (identical == TRUE){
stop("Your player is not in this team. Please input the correct player name / team ID.")
}
} else if (is_na == TRUE) {
print(team_df)
}
}
myplayer(19, "Laca")
myplayer(19, "Saka")
myplayer(19, "Saka")
myplayer(19, "Ozil")
document()
myplayer(19 "Ozil")
myplayer(19, "Ozil")
myplayer(25, "Salah")
myplayer(25, "Mane")
myplayer(19)
ID("English Premier League", "Manchester City")
ID("English Premier League", "Manchester City")
ID("Spanish La Liga", "FC Barcelona")
document()
library(footyr)
ID("English Premier League", "Arsenal")
document()
ID("English Premier League", "Arsenal")
ID("English Premier League", "Manchester City")
myplayer(26, "David")
myplayer(26, "Silva")
myplayer(26, "Bernado")
myplayer(26)
#Libraries
library(dplyr)
library(tibble)
library(jsonlite)
library(tidyr)
library(stringr)
library(httr)
myplayer(26)
myplayer(26, "Silva")
myplayer(26, "B")
myplayer(26, "R")
document()
check()
library(footyr)
#Load the package
library(footyr)
myplayer(teamID = 19, player_name = "Bernd Leno")
library(footyr)
check()
document()
library(devtools)
library(roxygen2)
document()
check()
document()
check()
check()
document()
check()
document()
library(footyr)
document()
library(devtools)
library(roxygen2)
document()
ID("English Premier League", "Arsenal")
document()
ID("English Premier League", "Arsenal")
ID("English Premier League", "Liverpool")
ID("English Premier League", "Barcelona")
ID("Spanish La Liga", "Barcelona")
ID("Spanish La Liga", " FCBarcelona")
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "Arsenal")
ID("Spanish La Liga", "Barcelona")
?filter
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
str_match
library(stringr)
str_match
?str_match
ID <- function(league_name, team_name = NA) {
leagues_url <- stringr::str_c("http://api.isportsapi.com/sport/football/league/basic?api_key=", Sys.getenv("ISPORT_KEY"))
#Retrieving data on leagues via league_name
leagues <- httr::GET(leagues_url)
# Checking the query status
if (leagues$status_code != 200) {
stop ("Error when calling API. Please check your function arguments.")
}
leagues1 <- jsonlite::fromJSON(jsonlite::toJSON(httr::content(leagues)))
leagues_df <- as.data.frame(leagues1) %>%
jsonlite::flatten() %>%
tidyr::unnest(cols = c(data.leagueId, data.name, data.shortName, data.type, data.subLeagueName))
leagues_df <- leagues_df %>%
dplyr::select(LeagueID = data.leagueId, League_Name = data.name,
League_Shortform = data.shortName, Sub_League_Name = data.subLeagueName)
league_detect <- stringr::str_detect(leagues_df$League_Name, league_name)
# Checking the league_name is spelt correctly
if (any(league_detect) == TRUE) {
leagues_df <- leagues_df %>%
dplyr::filter(League_Name == league_name)
league_info <- leagues_df[,1:2]
} else {
stop("You may have mispelt your league/cup name. Please try again with the correct league/cup name")
}
print(league_info)
if(is.na(team_name) == FALSE) {
league_id2 <- league_info[,1]
leagues_url2 <- stringr::str_c("http://api.isportsapi.com/sport/football/team?leagueId=",
league_id2, "&api_key=", Sys.getenv("ISPORT_KEY"))
#Retrieving data on teams in league
leagues2_query <- httr::GET(leagues_url2)
leagues2 <- jsonlite::fromJSON(jsonlite::toJSON(httr::content(leagues2_query)))
leagues2_df <- as.data.frame(leagues2) %>%
jsonlite::flatten() %>%
tidyr::unnest(cols = c(data.teamId, data.leagueId, data.name, data.logo, data.foundingDate,
data.address, data.area, data.venue, data.capacity, data.coach,
data.website))
leagues2_df <- leagues2_df %>%
dplyr::select(TeamID = data.teamId, Team_Name = data.name, Logo = data.logo)
team_detect <- stringr::str_detect(leagues2_df$Team_Name, team_name)
# Checking the team_name is spelt correctly
if (any(team_detect) == TRUE) {
leagues2_df <- leagues2_df %>%
dplyr::filter(Team_Name == team_name)
team_info <- leagues2_df[, 1:2]
print(team_info)
} else {
stop("You may have mispelt your team name OR Your team does not play in this league. Please try again with the correct team name")
}
}
}
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
library(footyr)
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
document()
ID("Spanish La Liga", 1639)
ID("Spanish La Liga", "Arsenal")
ID("Spanish La Liga", "Barclone")
ID("Spanish La Liga", "Barcelona")
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "FC Barcelona")
ID("Spanish La Liga", "Barcelona")
library(footyr)
ID("Spanish La Liga", "Barcelona")
ID("Spanish La Liga", "FC Barcelona")
document()
ID("Spanish La Liga", "Barcelona")
?filter
check()
check()
document()
myteam(1639, "Arsenal")
myteam(1639, "Arsenal", "yes")
myteam(1639, "Arsenal", "yes")
document()
myteam(1639, "Arsenal")
myteam(1639, "Arsenal", "yes")
document()
check()
#Load the package
library(footyr)
myteam(leagueID = 1639, team_name = "Arsenal")
devtools::load_all(".")
#Load the package
library(footyr)
myteam(leagueID = 1639, team_name = "Arsenal")
library(footyr)
myteam(1639, "Arsenal")
myteam(leagueID = 1639, team_name = "Arsenal", past_results = "yes", future = 5)
document()
devtools::load_all(".")
#Load the package
library(footyr)
myteam(leagueID = 1639, team_name = "Arsenal", past_results = "yes")
myteam(leagueID = 1639, team_name = "Arsenal", past_results = "yes")
myteam(1639, "Arsenal")
myteam(1639, "Liverpool")
library(devtools)
library(roxygen2)
check()
library(testthat)
devtools::uses_testthat()
devtools::use_testthat()
devtools::use_testthat()
library(devtools)
library(roxygen2)
devtools::use_testthat()
library(devtools)
library(testthat)
library(roxygen2)
devtools::use_testthat
devtools::use_testthat()
use_testthat()
devtools::test()
document()
test()
testthat::auto_test()
test()
ncol(ID("English Premier League"))
?ncol
ID("English Premier League")
is.tibble("English Premier League")
library(tibble)
is_tibble(ID("English Premier League"))
?peinr
?print
test()
test()
test()
test()
test()
test()
test()
ID("English Premier League", "Arsenal")
library(footyr)
ID("English Premier League", "Arsenal")
ID("English Premier League", "Arsenal")
ID("English Premier League", "Arsenal")
ID("English Premier League", "Arsenal")
library(footyr)
ID("English Premier League", "Arsenal")
test()
ID("English Premier Leagu")
ID("English Premier Leageu")
test()
ID()
library(footyr)
ID("English Premier League")
ID("English Premier Leagu")
document()
library(footyr)
ID("English Premier League")
ID("English Premier Leagu")
check()
ID()
ID("English")
ID(232)
is.character("English Premier League")
library(footyr)
ID("English Premier League")
ID(232)
ID()
ID("English Premier League", 1234)
library(footyr)
ID("English Premier League", 1639)
ID("English Premier League", 1639)
library(footyr)
ID("English Premier League", 1639)
ID("English Premier League", "Arsen")
library(footyr)
ID("English Premier League", "Arsen")
test()
test()
myleague(1639)
myleague("English Premier League")
myleague()
myleague(1639, "yes")
myleague(1639, 1234)
myleague(10000)
myleague(999)
myleague(123)
myleague(121)
myleague(1639)
test()
test()
myleague()
is.na()
myteam(1639)
myteam("English Premier League")
myteam(1639, "Arsenal")
myteam(1639, "Arse")
myteam(1639, "Arsena")
myteam(1639, "FC Barcelona")
library(footyr)
myteam(1639, "Arsena")
?nrows
devtools::load_all(".")
devtools::load_all(".")
library(footyr)
myteam(1639, "Arsena")
myteam(1639, "Dortmund")
myteam(1639, "Arsenal", "yes")
myteam(1639, "Arsenal", 123)
expect_error(myteam(1639, "Arsena"), "You may have mispelt your team name. Please try again with the correct team name")
myteam(1639, "Arsenal", "yes", 5)
myteam(1639, "Arsenal", "yes", "five")
test()
myplayer(19)
myplayer()
myplayer("Arsenal")
myplayer(10000)
myplayer(19)
myplayer(19, "Ozil")
myplayer(19, "Mesat Ozil")
myplayer(19, 1232)
myplayer(19, "Mesat Ozil")
myplayer(19, "Neymar")
myplayer(19, "Ozi")
mytopstats(1639)
mytopstats(1639, "Goals")
mytopstats(1639, "Goal")
mytopstats(1639, "Shot")
mytopstats("English Premier League")
mytopstats(1639, 1234)
mytopstats(1639, "Goals", "yes")
mytopstats(1639, "Goals", "test")
mytopstats(1639, "Goals", 1234)
test()
mytopstats(1649, "Goal")
mytopstats(1649, "Goal")
library(footyr)
mytopstats(1649, "Goal")
test()
mytopstats(1639, "Goal")
library(footyr)
mytopstats(1639, "Goal")
library(footyr)
mytopstats(1639, "Goal")
test()
check()
